// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// create_mat_t
NumericVector create_mat_t(NumericMatrix& mat, NumericVector& a_tm1, NumericVector& d, NumericVector& retention);
RcppExport SEXP _spreadr_create_mat_t(SEXP matSEXP, SEXP a_tm1SEXP, SEXP dSEXP, SEXP retentionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type mat(matSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type a_tm1(a_tm1SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type retention(retentionSEXP);
    rcpp_result_gen = Rcpp::wrap(create_mat_t(mat, a_tm1, d, retention));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_spreadr_create_mat_t", (DL_FUNC) &_spreadr_create_mat_t, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_spreadr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
